//
// PageAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire
import RxSwift



open class PageAPI {
    /**
     Get a Page of the Quran
     
     - parameter page: (path) Number of page in Quran 
     - parameter edition: (path) Edition identifier 
     - parameter offset: (query) Offset ayahs in a page by the given number (optional)
     - parameter limit: (query) This is the number of ayahs that the response will be limited to (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPageByEdition(page: String, edition: String, offset: String? = nil, limit: String? = nil, completion: @escaping ((_ data: PageResponse?,_ error: Error?) -> Void)) {
        getPageByEditionWithRequestBuilder(page: page, edition: edition, offset: offset, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get a Page of the Quran
     
     - parameter page: (path) Number of page in Quran 
     - parameter edition: (path) Edition identifier 
     - parameter offset: (query) Offset ayahs in a page by the given number (optional)
     - parameter limit: (query) This is the number of ayahs that the response will be limited to (optional)
     - returns: Observable<PageResponse>
     */
    open class func getPageByEdition(page: String, edition: String, offset: String? = nil, limit: String? = nil) -> Observable<PageResponse> {
        return Observable.create { observer -> Disposable in
            getPageByEdition(page: page, edition: edition, offset: offset, limit: limit) { data, error in
                if let error = error {
                    observer.on(.error(error))
                } else {
                    observer.on(.next(data!))
                }
                observer.on(.completed)
            }
            return Disposables.create()
        }
    }

    /**
     Get a Page of the Quran
     - GET /page/{page}/{edition}
     - 
     - examples: [{contentType=application/json, example={
  "code" : 0,
  "data" : {
    "number" : 6,
    "edition" : {
      "identifier" : "identifier",
      "englishName" : "englishName",
      "name" : "name",
      "format" : "format",
      "language" : "language",
      "type" : "type"
    },
    "ayahs" : [ {
      "number" : 5,
      "audioSecondary" : [ "audioSecondary", "audioSecondary" ],
      "hizbQuarter" : 2,
      "ruku" : 3,
      "manzil" : 7,
      "audio" : "audio",
      "text" : "text",
      "page" : 9,
      "sajda" : true,
      "surah" : {
        "number" : 6,
        "englishName" : "englishName",
        "numberOfAyahs" : 1,
        "revelationType" : "revelationType",
        "name" : "name",
        "englishNameTranslation" : "englishNameTranslation"
      },
      "numberInSurah" : 5,
      "juz" : 2
    }, {
      "number" : 5,
      "audioSecondary" : [ "audioSecondary", "audioSecondary" ],
      "hizbQuarter" : 2,
      "ruku" : 3,
      "manzil" : 7,
      "audio" : "audio",
      "text" : "text",
      "page" : 9,
      "sajda" : true,
      "surah" : {
        "number" : 6,
        "englishName" : "englishName",
        "numberOfAyahs" : 1,
        "revelationType" : "revelationType",
        "name" : "name",
        "englishNameTranslation" : "englishNameTranslation"
      },
      "numberInSurah" : 5,
      "juz" : 2
    } ]
  },
  "status" : "status"
}}]
     
     - parameter page: (path) Number of page in Quran 
     - parameter edition: (path) Edition identifier 
     - parameter offset: (query) Offset ayahs in a page by the given number (optional)
     - parameter limit: (query) This is the number of ayahs that the response will be limited to (optional)

     - returns: RequestBuilder<PageResponse> 
     */
    open class func getPageByEditionWithRequestBuilder(page: String, edition: String, offset: String? = nil, limit: String? = nil) -> RequestBuilder<PageResponse> {
        var path = "/page/{page}/{edition}"
        let pagePreEscape = "\(page)"
        let pagePostEscape = pagePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{page}", with: pagePostEscape, options: .literal, range: nil)
        let editionPreEscape = "\(edition)"
        let editionPostEscape = editionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{edition}", with: editionPostEscape, options: .literal, range: nil)
        let URLString = HafazQuranClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "offset": offset, 
            "limit": limit
        ])

        let requestBuilder: RequestBuilder<PageResponse>.Type = HafazQuranClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
